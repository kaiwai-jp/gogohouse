rules_version = '2';
service cloud.firestore {

  // ユーザー認証の関数
  function isAuthUser(auth, userId) {
    return auth != null && auth.uid == userId // 認証があり、uidとuserIdが一致する
  }

  match /databases/{database}/documents {

    // reserved_userコレクション
    match /reserved_users/{twitterId} {
      allow read: if true;
    }
    
    // serverコレクション
    match /server/{id} {
      allow read: if request.auth.uid != null;
    }

    // user_privatesコレクション
    match /user_privates/{userId} {
      allow read, write: if isAuthUser(request.auth, userId);
    }

    // usersコレクション
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth.uid == userId && request.auth.uid == request.resource.data.uid && !('current_room' in request.writeFields);
      allow update: if request.auth.uid == userId && !('uid' in request.writeFields) && (!('current_room' in request.writeFields) || request.resource.data.current_room == '');
    
      // connections_offeredサブコレクション
      match /connections_offered/{connectionId} {
        allow read: if request.auth.uid == userId;
        allow write: if request.auth.uid != null;
      }
    }
    // roomsコレクション
    match /rooms/{roomId} {
      allow get: if true;
      allow list: if true;//request.auth.uid in resource.data.members || request.auth.uid == resource.data.owner_id
      allow create: if request.auth.uid == request.resource.data.creater_id;
      allow update, delete: if request.auth.uid == resource.data.owner_id;
    }
    
    // connectionsコレクション
    match /connections/{connectionId} {
      allow get, write: if request.auth.uid != null;

      // answerサブコレクション
      match /answer/{answerId} {
        allow read, write: if request.auth.uid != null;
      }
      
      // candidate_offerサブコレクション
      match /candidate_offer/{candidateOfferId} {
        allow read, write: if request.auth.uid != null;
      }

      // candidate_answerサブコレクション
      match /candidate_answer/{candidateAnswerId} {
        allow read, write: if request.auth.uid != null;
      }
    }    
  }
}